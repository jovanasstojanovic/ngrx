import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ShareScreenDirective, ToggleAudioSelfDirective, ToggleAudioUserDirective, ToggleVideoSelfDirective, ToggleVideoUserDirective } from './directives';
import { Configuration } from './ngx-webrtc-configuration';
import { NGX_WEBRTC_STORAGE } from './ngx-webrtc-storage';
import { NGX_WEBRTC_STORAGE_PREFIX } from './ngx-webrtc-storage-prefix';
import * as i0 from "@angular/core";
export class NgxWebrtcModule {
    static forRoot(libConfiguration) {
        return {
            ngModule: NgxWebrtcModule,
            providers: [
                {
                    provide: Configuration,
                    useValue: libConfiguration,
                },
            ],
        };
    }
}
NgxWebrtcModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: NgxWebrtcModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgxWebrtcModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: NgxWebrtcModule, declarations: [ToggleAudioSelfDirective,
        ToggleVideoSelfDirective,
        ToggleAudioUserDirective,
        ToggleVideoUserDirective,
        ShareScreenDirective], imports: [CommonModule], exports: [ToggleAudioSelfDirective,
        ToggleVideoSelfDirective,
        ToggleAudioUserDirective,
        ToggleVideoUserDirective,
        ShareScreenDirective] });
NgxWebrtcModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: NgxWebrtcModule, providers: [
        { provide: NGX_WEBRTC_STORAGE_PREFIX, useValue: 'ngx-webrtc' },
        { provide: NGX_WEBRTC_STORAGE, useValue: 'sessionStorage' },
    ], imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: NgxWebrtcModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ToggleAudioSelfDirective,
                        ToggleVideoSelfDirective,
                        ToggleAudioUserDirective,
                        ToggleVideoUserDirective,
                        ShareScreenDirective,
                    ],
                    exports: [
                        ToggleAudioSelfDirective,
                        ToggleVideoSelfDirective,
                        ToggleAudioUserDirective,
                        ToggleVideoUserDirective,
                        ShareScreenDirective,
                    ],
                    imports: [CommonModule],
                    providers: [
                        { provide: NGX_WEBRTC_STORAGE_PREFIX, useValue: 'ngx-webrtc' },
                        { provide: NGX_WEBRTC_STORAGE, useValue: 'sessionStorage' },
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXdlYnJ0Yy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL25neC13ZWJydGMvc3JjL2xpYi9uZ3gtd2VicnRjLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLHdCQUF3QixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTVKLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUF1QnhFLE1BQU0sT0FBTyxlQUFlO0lBQzFCLE1BQU0sQ0FBQyxPQUFPLENBQ1osZ0JBQXdDO1FBRXhDLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFFBQVEsRUFBRSxnQkFBZ0I7aUJBQzNCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQzs7NEdBYlUsZUFBZTs2R0FBZixlQUFlLGlCQW5CeEIsd0JBQXdCO1FBQ3hCLHdCQUF3QjtRQUN4Qix3QkFBd0I7UUFDeEIsd0JBQXdCO1FBQ3hCLG9CQUFvQixhQVNaLFlBQVksYUFOcEIsd0JBQXdCO1FBQ3hCLHdCQUF3QjtRQUN4Qix3QkFBd0I7UUFDeEIsd0JBQXdCO1FBQ3hCLG9CQUFvQjs2R0FRWCxlQUFlLGFBTGY7UUFDVCxFQUFFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFO1FBQzlELEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRTtLQUM1RCxZQUpRLENBQUMsWUFBWSxDQUFDOzJGQU1aLGVBQWU7a0JBckIzQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWix3QkFBd0I7d0JBQ3hCLHdCQUF3Qjt3QkFDeEIsd0JBQXdCO3dCQUN4Qix3QkFBd0I7d0JBQ3hCLG9CQUFvQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHdCQUF3Qjt3QkFDeEIsd0JBQXdCO3dCQUN4Qix3QkFBd0I7d0JBQ3hCLHdCQUF3Qjt3QkFDeEIsb0JBQW9CO3FCQUNyQjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLFNBQVMsRUFBRTt3QkFDVCxFQUFFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFO3dCQUM5RCxFQUFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUU7cUJBQzVEO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZVNjcmVlbkRpcmVjdGl2ZSwgVG9nZ2xlQXVkaW9TZWxmRGlyZWN0aXZlLCBUb2dnbGVBdWRpb1VzZXJEaXJlY3RpdmUsIFRvZ2dsZVZpZGVvU2VsZkRpcmVjdGl2ZSwgVG9nZ2xlVmlkZW9Vc2VyRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzJztcbmltcG9ydCB7IE5neFdlYnJ0Y0NvbmZpZ3VyYXRpb24gfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gJy4vbmd4LXdlYnJ0Yy1jb25maWd1cmF0aW9uJztcbmltcG9ydCB7IE5HWF9XRUJSVENfU1RPUkFHRSB9IGZyb20gJy4vbmd4LXdlYnJ0Yy1zdG9yYWdlJztcbmltcG9ydCB7IE5HWF9XRUJSVENfU1RPUkFHRV9QUkVGSVggfSBmcm9tICcuL25neC13ZWJydGMtc3RvcmFnZS1wcmVmaXgnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUb2dnbGVBdWRpb1NlbGZEaXJlY3RpdmUsXG4gICAgVG9nZ2xlVmlkZW9TZWxmRGlyZWN0aXZlLFxuICAgIFRvZ2dsZUF1ZGlvVXNlckRpcmVjdGl2ZSxcbiAgICBUb2dnbGVWaWRlb1VzZXJEaXJlY3RpdmUsXG4gICAgU2hhcmVTY3JlZW5EaXJlY3RpdmUsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBUb2dnbGVBdWRpb1NlbGZEaXJlY3RpdmUsXG4gICAgVG9nZ2xlVmlkZW9TZWxmRGlyZWN0aXZlLFxuICAgIFRvZ2dsZUF1ZGlvVXNlckRpcmVjdGl2ZSxcbiAgICBUb2dnbGVWaWRlb1VzZXJEaXJlY3RpdmUsXG4gICAgU2hhcmVTY3JlZW5EaXJlY3RpdmUsXG4gIF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7IHByb3ZpZGU6IE5HWF9XRUJSVENfU1RPUkFHRV9QUkVGSVgsIHVzZVZhbHVlOiAnbmd4LXdlYnJ0YycgfSxcbiAgICB7IHByb3ZpZGU6IE5HWF9XRUJSVENfU1RPUkFHRSwgdXNlVmFsdWU6ICdzZXNzaW9uU3RvcmFnZScgfSxcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hXZWJydGNNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBsaWJDb25maWd1cmF0aW9uOiBOZ3hXZWJydGNDb25maWd1cmF0aW9uXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4V2VicnRjTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hXZWJydGNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IENvbmZpZ3VyYXRpb24sXG4gICAgICAgICAgdXNlVmFsdWU6IGxpYkNvbmZpZ3VyYXRpb24sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==