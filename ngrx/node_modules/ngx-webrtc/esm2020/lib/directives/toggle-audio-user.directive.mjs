import { Directive, HostBinding, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Send a toggle audio request to a specific peer connection.
 */
export class ToggleAudioUserDirective {
    constructor() {
        this.ngxWebrtcToggleAudioUser = null;
        this.isDisabled = true;
        this.isEnabled = false;
    }
    onClick() {
        this.toggleUserAudio();
    }
    toggleUserAudio() {
        if (!this.ngxWebrtcToggleAudioUser) {
            console.warn('user not set');
            return;
        }
        if (this.ngxWebrtcToggleAudioUser?.connection) {
            this.ngxWebrtcToggleAudioUser.connection.requestMuteAudio();
            this.isEnabled = !this.isEnabled;
            this.isDisabled = !this.isDisabled;
        }
    }
}
ToggleAudioUserDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: ToggleAudioUserDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ToggleAudioUserDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.2.1", type: ToggleAudioUserDirective, selector: "[ngxWebrtcToggleAudioUser]", inputs: { ngxWebrtcToggleAudioUser: "ngxWebrtcToggleAudioUser" }, host: { listeners: { "click": "onClick($event)" }, properties: { "class.disabled": "this.isDisabled", "class.enabled": "this.isEnabled" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.1", ngImport: i0, type: ToggleAudioUserDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngxWebrtcToggleAudioUser]',
                }]
        }], propDecorators: { ngxWebrtcToggleAudioUser: [{
                type: Input
            }], isDisabled: [{
                type: HostBinding,
                args: ['class.disabled']
            }], isEnabled: [{
                type: HostBinding,
                args: ['class.enabled']
            }], onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLWF1ZGlvLXVzZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3gtd2VicnRjL3NyYy9saWIvZGlyZWN0aXZlcy90b2dnbGUtYXVkaW8tdXNlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHNUU7O0dBRUc7QUFJSCxNQUFNLE9BQU8sd0JBQXdCO0lBSHJDO1FBS1csNkJBQXdCLEdBQXNCLElBQUksQ0FBQztRQUN0QixlQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ25CLGNBQVMsR0FBRyxLQUFLLENBQUM7S0FpQnhEO0lBaEJvQyxPQUFPO1FBQ3hDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsd0JBQXdCLEVBQUU7WUFDbEMsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUM3QixPQUFPO1NBQ1I7UUFDRCxJQUFJLElBQUksQ0FBQyx3QkFBd0IsRUFBRSxVQUFVLEVBQUU7WUFDN0MsSUFBSSxDQUFDLHdCQUF3QixDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1lBQzVELElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7cUhBbkJVLHdCQUF3Qjt5R0FBeEIsd0JBQXdCOzJGQUF4Qix3QkFBd0I7a0JBSHBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtpQkFDdkM7OEJBR1Usd0JBQXdCO3NCQUFoQyxLQUFLO2dCQUNnQyxVQUFVO3NCQUEvQyxXQUFXO3VCQUFDLGdCQUFnQjtnQkFDUSxTQUFTO3NCQUE3QyxXQUFXO3VCQUFDLGVBQWU7Z0JBQ08sT0FBTztzQkFBekMsWUFBWTt1QkFBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVc2VySW5DYWxsIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvdXNlci1pbi1jYWxsXCI7XG5cbi8qKlxuICogU2VuZCBhIHRvZ2dsZSBhdWRpbyByZXF1ZXN0IHRvIGEgc3BlY2lmaWMgcGVlciBjb25uZWN0aW9uLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmd4V2VicnRjVG9nZ2xlQXVkaW9Vc2VyXScsXG59KVxuZXhwb3J0IGNsYXNzIFRvZ2dsZUF1ZGlvVXNlckRpcmVjdGl2ZSB7XG5cbiAgQElucHV0KCkgbmd4V2VicnRjVG9nZ2xlQXVkaW9Vc2VyOiBVc2VySW5DYWxsIHwgbnVsbCA9IG51bGw7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuZGlzYWJsZWQnKSBwdWJsaWMgaXNEaXNhYmxlZCA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuZW5hYmxlZCcpIHB1YmxpYyBpc0VuYWJsZWQgPSBmYWxzZTtcbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKSBvbkNsaWNrKCk6IHZvaWR7XG4gICAgdGhpcy50b2dnbGVVc2VyQXVkaW8oKTtcbiAgfVxuXG4gIHRvZ2dsZVVzZXJBdWRpbygpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubmd4V2VicnRjVG9nZ2xlQXVkaW9Vc2VyKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ3VzZXIgbm90IHNldCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5uZ3hXZWJydGNUb2dnbGVBdWRpb1VzZXI/LmNvbm5lY3Rpb24pIHtcbiAgICAgIHRoaXMubmd4V2VicnRjVG9nZ2xlQXVkaW9Vc2VyLmNvbm5lY3Rpb24ucmVxdWVzdE11dGVBdWRpbygpO1xuICAgICAgdGhpcy5pc0VuYWJsZWQgPSAhdGhpcy5pc0VuYWJsZWQ7XG4gICAgICB0aGlzLmlzRGlzYWJsZWQgPSAhdGhpcy5pc0Rpc2FibGVkO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=